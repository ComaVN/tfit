MAKE = make

CXX = clang++
CXXFLAGS += -std=c++11
CXXFLAGS += -stdlib=libc++
CXXFLAGS += -Wall -Werror -pedantic-errors
# exception needed for cmdline.cpp, which is generated by gengetopt, and inexplicably is not warning-free (at least not in v2.22.6 and with the current tfit.ggo)
CXXFLAGS += -Wno-unused-function

GENGETOPT = gengetopt

BUILDDIR = build
EXECUTABLE = tfit

SOURCEDIR = src
CPPFILES += $(SOURCEDIR)/$(EXECUTABLE).cpp
CPPFILES += $(SOURCEDIR)/cmdline.cpp
CPPFILES += $(wildcard $(SOURCEDIR)/**/*.cpp)
CXXFLAGS += -I$(SOURCEDIR)

TESTDIR = test
TESTDATADIR = $(TESTDIR)/data

VENDORDIR = vendor
# libb64:
VENDORLIBS += $(VENDORDIR)/libb64
CXXFLAGS += -I$(VENDORDIR)/libb64/include
CXXFLAGS += -Xlinker -L$(VENDORDIR)/libb64/src -Xlinker -lb64
BUFFERSIZE = 16777216
CXXFLAGS += -DBUFFERSIZE=$(BUFFERSIZE)
# end of macros

all: $(BUILDDIR)/$(EXECUTABLE)

$(BUILDDIR)/$(EXECUTABLE): $(VENDORLIBS) $(CPPFILES)
	@mkdir -p $(@D)
	$(CXX) ${CPPFILES} $(CXXFLAGS) -o $(BUILDDIR)/$(EXECUTABLE)

$(VENDORDIR)/libb64:
	git clone git://git.code.sf.net/p/libb64/git $(VENDORDIR)/libb64
	make -C $(VENDORDIR)/libb64/src

$(SOURCEDIR)/cmdline.cpp: $(SOURCEDIR)/$(EXECUTABLE).ggo
	$(GENGETOPT) --output-dir $(SOURCEDIR) --c-extension cpp < $(SOURCEDIR)/$(EXECUTABLE).ggo

debug: $(BUILDDIR)/$(EXECUTABLE).debug

$(BUILDDIR)/$(EXECUTABLE).debug: $(VENDORLIBS) $(CPPFILES)
	@mkdir -p $(@D)
	$(CXX) -g -O0 ${CPPFILES} $(CXXFLAGS) -o $(BUILDDIR)/$(EXECUTABLE).debug

test: debug
	valgrind --leak-check=yes $(BUILDDIR)/$(EXECUTABLE).debug < $(TESTDATADIR)/foo.base64

clean:
	rm -rf $(BUILDDIR) $(SOURCEDIR)/cmdline.cpp $(SOURCEDIR)/cmdline.h $(VENDORDIR)

.PHONY: all debug test clean
